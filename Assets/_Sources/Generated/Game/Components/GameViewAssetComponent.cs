//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ViewAssetComponent viewAsset { get { return (ViewAssetComponent)GetComponent(GameComponentsLookup.ViewAsset); } }
    public bool hasViewAsset { get { return HasComponent(GameComponentsLookup.ViewAsset); } }

    public void AddViewAsset(tk2dSpriteCollectionData newCollectionData, string newSpriteName) {
        var index = GameComponentsLookup.ViewAsset;
        var component = CreateComponent<ViewAssetComponent>(index);
        component.collectionData = newCollectionData;
        component.spriteName = newSpriteName;
        AddComponent(index, component);
    }

    public void ReplaceViewAsset(tk2dSpriteCollectionData newCollectionData, string newSpriteName) {
        var index = GameComponentsLookup.ViewAsset;
        var component = CreateComponent<ViewAssetComponent>(index);
        component.collectionData = newCollectionData;
        component.spriteName = newSpriteName;
        ReplaceComponent(index, component);
    }

    public void RemoveViewAsset() {
        RemoveComponent(GameComponentsLookup.ViewAsset);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherViewAsset;

    public static Entitas.IMatcher<GameEntity> ViewAsset {
        get {
            if (_matcherViewAsset == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ViewAsset);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherViewAsset = matcher;
            }

            return _matcherViewAsset;
        }
    }
}
